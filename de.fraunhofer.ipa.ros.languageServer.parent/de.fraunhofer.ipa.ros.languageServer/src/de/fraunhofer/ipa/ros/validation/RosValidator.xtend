/*
 * generated by Xtext 2.16.0
 */
package de.fraunhofer.ipa.ros.validation

import org.eclipse.xtext.validation.Check
import ros.Node
import ros.Artifact
import ros.Package

/**
 * This class contains custom validation rules. 
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class RosValidator extends AbstractRosValidator {

	public static val INVALID_NAME = 'invalidName'

	/* CAPITAL LETTERS */
	@Check
	def void checkNameConventionsNode(Node node) {
		for (char c : node.name.toCharArray) {
			if (Character.isUpperCase(c)) {
				warning(
					"The name of a node should follow the ROS naming conventions: Capital letters are not recommended",
					null, INVALID_NAME);
			}
		}
	}

	@Check
	def void checkNameConventionsArtifact(Artifact artifact) {
		for (char c : artifact.name.toCharArray) {
			if (Character.isUpperCase(c)) {
				warning(
					"The name of a artifact should follow the ROS naming conventions: Capital letters are not recommended",
					null, INVALID_NAME);
			}
		}
	}

	@Check
	def void checkNameConventionsPackage(Package rospackage) {
		for (char c : rospackage.name.toCharArray) {
			if (Character.isUpperCase(c)) {
				error("The name of a package has to follow the ROS naming conventions: Capital letters are not allowed",
					null, INVALID_NAME);
			}
		}
	}

}
