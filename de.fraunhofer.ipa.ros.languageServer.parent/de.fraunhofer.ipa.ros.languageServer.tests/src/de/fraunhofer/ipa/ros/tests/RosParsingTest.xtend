/*
 * generated by Xtext 2.16.0
 */
package de.fraunhofer.ipa.ros.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import ros.PackageSet

@ExtendWith(InjectionExtension)
@InjectWith(RosInjectorProvider)
class RosParsingTest {
	@Inject
	ParseHelper<PackageSet> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			PackageSet { package { 
			  CatkinPackage cob_sick_s300 { artifact {
			    Artifact cob_sick_s300 {
			      node Node { name cob_sick_s300
			        publisher {
			          Publisher { name 'scan' message 'sensor_msgs.LaserScan'},
			          Publisher { name 'scan_standby' message 'std_msgs.Bool'},
			          Publisher { name '/diagnostics' message 'diagnostic_msgs.DiagnosticArray'}}
			}}}}}}
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
